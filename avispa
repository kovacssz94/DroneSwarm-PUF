role Drone
{
    const PK_GS: public_key;  // Public key of the ground station
    const PK_LD: public_key;  // Public key of the leader drone
    const PKI: public_key;    // Public key infrastructure

    const Q_i: nonce;          // Nonce generated by the drone
    const C_LD: nonce;         // Random value for leader drone
    const R_i: nonce;          // Unique identifier for the drone
    const T_i: timestamp;      // Current timestamp

    const ACK_i: bitstring;    // Acknowledgement message

    // Step 1: Drone sends initialization message to ground station
    send(Drone, GroundStation, {AID_i, Q_i, M_i, T_i}_PKI);

    // Step 2: Ground station verifies the initialization message and sends back an acknowledgement
    recv(GroundStation, Drone, {ACK_i, T_GS, C_LD}_PK_GS);
    if (check_validity(T_i, T_GS) && check_AID(AID_i, R_i, C_LD)) {
        send(Drone, LeaderDrone, {ACK_i, T_GS, C_LD}_PK_LD);
    }

    // Step 3: Leader drone receives acknowledgement and stores the keys
    recv(LeaderDrone, Drone, {MAC_LD, ACK_i, Q_LD, M_LD, T_GS}_PK_LD);
    if (verify_MAC(MAC_LD, ACK_i, Q_LD, M_LD, T_GS, PK_GS)) {
        // Store valid keys and information
    }
}
